{
	"info": {
		"_postman_id": "10175852-3c84-41e0-899e-93dc8e4871c9",
		"name": "4156 EasyMoney LGTM Local",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24027110"
	},
	"item": [
		{
			"name": "create user 1 personal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user created response 1\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"222@gmail.com\",\n    \"password\" : \"123\",\n    \"accountName\" : \"test test\",\n    \"accountNumber\" : \"43654\",\n    \"routingNumber\" : \"222222224\",\n    \"phone\" : \"9094567891\",\n    \"userType\" : \"personal\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/register",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user 2 personal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user created response 2\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"2223@gmail.com\",\n    \"password\" : \"123\",\n    \"accountName\" : \"test user\",\n    \"accountNumber\" : \"43654\",\n    \"routingNumber\" : \"222222221\",\n    \"phone\" : \"9094567891\",\n    \"userType\" : \"personal\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/register",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user 3 business",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user created response 3\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"11s31212@tes123t.com\",\n    \"password\" : \"heyhe4yhey\",\n    \"accountName\" : \"test\",\n    \"accountNumber\" : \"1311110\",\n    \"routingNumber\" : \"917354521\",\n    \"userType\" : \"business\",\n    \"bizPromotionText\": \"Free goods!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/register",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user 4 business",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user created response 4\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"test@te3t.com\",\n    \"password\" : \"heyheyhey\",\n    \"accountName\" : \"test biz\",\n    \"accountNumber\" : \"7555608\",\n    \"routingNumber\" : \"987654321\",\n    \"userType\" : \"business\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/register",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "create user 5 financial",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user created response 5\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(5);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"a@bank.com\",\n    \"password\" : \"heyheyhey\",\n    \"accountName\" : \"bbb\",\n    \"accountNumber\" : \"217555608\",\n    \"routingNumber\" : \"987654321\",\n    \"userType\" : \"financial\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/register",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "user1 login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test user 1 token\", () => {",
							"  pm.expect(responseBody).to.be.a(\"string\");",
							"  pm.expect(responseBody.length).greaterThan(0);",
							"});",
							"pm.collectionVariables.set(\"user1Token\", responseBody)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"222@gmail.com\",\n    \"password\" : \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/login",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user2 login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test user 2 token\", () => {",
							"  pm.expect(responseBody).to.be.a(\"string\");",
							"  pm.expect(responseBody.length).greaterThan(0);",
							"});",
							"pm.collectionVariables.set(\"user2Token\", responseBody)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"2223@gmail.com\",\n    \"password\" : \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/login",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user3 login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test user 3 token\", () => {",
							"  pm.expect(responseBody).to.be.a(\"string\");",
							"  pm.expect(responseBody.length).greaterThan(0);",
							"});",
							"pm.collectionVariables.set(\"user3Token\", responseBody)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"11s31212@tes123t.com\",\n    \"password\" : \"heyhe4yhey\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/login",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user4 login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test user 4 token\", () => {",
							"  pm.expect(responseBody).to.be.a(\"string\");",
							"  pm.expect(responseBody.length).greaterThan(0);",
							"});",
							"pm.collectionVariables.set(\"user4Token\", responseBody)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"test@te3t.com\",\n    \"password\" : \"heyheyhey\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/login",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user5 login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test user 5 token\", () => {",
							"  pm.expect(responseBody).to.be.a(\"string\");",
							"  pm.expect(responseBody.length).greaterThan(0);",
							"});",
							"pm.collectionVariables.set(\"user5Token\", responseBody)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\" : \"a@bank.com\",\n    \"password\" : \"heyheyhey\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/auth/login",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "deposit user 1 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user 1 balance after first deposit\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.currBalance).eqls(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\" : \"400\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/user/deposit",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"user",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "withdraw user 1 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user 1 balance after first withdraw\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.currBalance).eqls(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": \"200\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/user/withdraw",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"user",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "deposit user 2 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user 2 balance after first deposit\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.currBalance).eqls(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user2Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\" : \"400\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/user/deposit",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"user",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "deposit user 3 50000",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user 3 balance after first deposit\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.currBalance).eqls(50000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user3Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\" : \"50000\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/user/deposit",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"user",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "deposit user 4 50000",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user 4 balance after first deposit\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.currBalance).eqls(50000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user4Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\" : \"50000\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/user/deposit",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"user",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "deposit user 5 1000000",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user 5 balance after first deposit\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.currBalance).eqls(1000000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user5Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\" : \"1000000\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/user/deposit",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"user",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "update biz user 5",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user5Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"promotionText\" : \"unlimited cash!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/user/biz",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"user",
						"biz"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user 1 details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test user 1 details\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/user/me",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"user",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "create money request 1=>2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test transaction 1 created\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"toUid\" : \"2\",\n    \"amount\" : \"50\",\n    \"description\" : \"test description\",\n    \"category\" : \"FOOD\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/request/create",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"request",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "accept money request 2=>1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user2Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\": \"1\",\n    \"toUid\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/request/accept",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"request",
						"accept"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create money request dec 1=>2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test transaction 2 created\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"toUid\" : \"2\",\n    \"amount\" : \"50\",\n    \"description\" : \"test description\",\n    \"category\" : \"FOOD\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/request/create",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"request",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "decline money request 2=>1",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user2Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\" : \"2\",\n    \"toUid\" : \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/request/decline",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"request",
						"decline"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all money requests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test pending requests\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.requests.length).eqls(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8083/request",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "make a  transfer 1=>2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test transaction 3 created\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"toUid\": 2,\n    \"amount\": \"133.0\",\n    \"category\": \"PARTY\",\n    \"description\": \"123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/transfer/create",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"transfer",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "create group with personal user 1, business user 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test group 1 created\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user3Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"uids\": [1, 3],\n    \"name\": \"Test Group\",\n    \"description\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/group/create",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"group",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "get group ads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test group ads\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.ads.length).eqls(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/group/1/business",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"group",
						"1",
						"business"
					]
				}
			},
			"response": []
		},
		{
			"name": "get group info",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/group/1",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"group",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user profile by id",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/search/id/1",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"search",
						"id",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "search users partial match",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test partial matching search\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.userProfiles.length).eqls(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8083/search/info/22",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"search",
						"info",
						"22"
					]
				}
			},
			"response": []
		},
		{
			"name": "add friend 1=>2",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"uid\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/friend/add",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"friend",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "usr2 gets pending friends",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test pending friends\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.userProfiles.length).eqls(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user2Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/friend/pending",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"friend",
						"pending"
					]
				}
			},
			"response": []
		},
		{
			"name": "accept friend 2=>1",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user2Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"uid\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/friend/accept",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"friend",
						"accept"
					]
				}
			},
			"response": []
		},
		{
			"name": "get usr1's friends",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test friend list\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.userProfiles.length).eqls(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/friend",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"friend"
					]
				}
			},
			"response": []
		},
		{
			"name": "get usr1's feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test feed\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.activities.length).greaterThan(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/feed",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"feed"
					]
				}
			},
			"response": []
		},
		{
			"name": "usr1 deletes friend 2",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/friend/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"friend",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "create loan request 1=>5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test transaction 4 created\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"fromUid\": 1,\n  \"toUid\": 5,\n  \"amount\": 100,\n  \"description\": \"need free money\",\n  \"category\": \"RENT\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/loan/request",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"loan",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "approve loan request 5=>1",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user5Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"toUid\": 1,\n  \"requestid\": 4\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/loan/approve",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"loan",
						"approve"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create loan request dec 1=>5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Approved loan creates an extra transaction, so the ID is 6 here",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test transaction 6 created\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"  pm.expect(jsonData.id).eqls(6);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"toUid\": 5,\n  \"amount\": 100,\n  \"description\": \"need free money\",\n  \"category\": \"RENT\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/loan/request",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"loan",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "decline loan request 5=>1",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user5Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestid\" : \"6\",\n    \"toUid\" : \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/loan/decline",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"loan",
						"decline"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get user 1 analytics",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{user1Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8083/analytic",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"analytic"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "user1Token",
			"value": ""
		},
		{
			"key": "user2Token",
			"value": ""
		},
		{
			"key": "user3Token",
			"value": ""
		},
		{
			"key": "user4Token",
			"value": ""
		},
		{
			"key": "user5Token",
			"value": ""
		}
	]
}